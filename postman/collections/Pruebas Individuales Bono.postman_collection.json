{
	"info": {
		"_postman_id": "bd5b80e0-226a-4c4c-a963-1c981184ca45",
		"name": "Pruebas Individuales Bono",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31464450"
	},
	"item": [
		{
			"name": "CrearBono",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test('Response contains correct data', function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.usuario.id).to.eql(1);  \r",
							"    pm.expect(responseJson.clase.id).to.eql(2);   \r",
							"    pm.expect(responseJson.monto).to.eql(500);      \r",
							"    pm.expect(responseJson.calificacion).to.eql(4); \r",
							"    pm.expect(responseJson.palabraClave).to.eql(\"Matemáticas\");  \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"usuarioId\": \"1\",\r\n  \"claseId\": 2,\r\n  \"monto\": 500,\r\n  \"calificacion\": 4,\r\n  \"palabraClave\": \"Matemáticas\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/bonos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"bonos"
					]
				}
			},
			"response": []
		},
		{
			"name": "CrearBonoMayor4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test('Response contains correct data', function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.usuario.id).to.eql(1); \r",
							"    pm.expect(responseJson.clase.id).to.eql(2);   \r",
							"    pm.expect(responseJson.monto).to.eql(500);      \r",
							"    pm.expect(responseJson.calificacion).to.eql(5); \r",
							"    pm.expect(responseJson.palabraClave).to.eql(\"Matemáticas\");  \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"usuarioId\": \"1\",\r\n  \"claseId\": 2,\r\n  \"monto\": 500,\r\n  \"calificacion\": 5,\r\n  \"palabraClave\": \"Matemáticas\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/bonos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"bonos"
					]
				}
			},
			"response": []
		},
		{
			"name": "CrearBonoInvalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test('Response contains error message', function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.message).to.eql('El monto del bono debe ser positivo.');  \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"usuarioId\": 1,\r\n  \"claseId\": 2,\r\n  \"monto\": -100, \r\n  \"calificacion\": 4,\r\n  \"palabraClave\": \"Matemáticas\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/bonos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"bonos"
					]
				}
			},
			"response": []
		},
		{
			"name": "CrearBonoInvalidoRol",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test('Response contains error message', function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.message).to.eql('Solo un usuario con rol de Profesor puede tener bonos.');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"usuarioId\": 3, \r\n  \"claseId\": 2,\r\n  \"monto\": 500,\r\n  \"calificacion\": 4,\r\n  \"palabraClave\": \"Matemáticas\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/bonos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"bonos"
					]
				}
			},
			"response": []
		},
		{
			"name": "BuscarBonoID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Response contains valid bono data', function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.property('id');\r",
							"    pm.expect(responseJson.id).to.eql(1);\r",
							"    pm.expect(responseJson).to.have.property('monto');\r",
							"    pm.expect(responseJson).to.have.property('calificacion');\r",
							"    pm.expect(responseJson).to.have.property('palabraClave');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/bonos/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"bonos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "BuscarBonoIDError",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test('Error message is correct', function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.property('message');\r",
							"    pm.expect(responseJson.message).to.eql('Bono no encontrado.');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/bonos/1000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"bonos",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "BuscarBonoUsuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Response contains array of bonos', function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.an('array'); \r",
							"    pm.expect(responseJson.length).to.be.greaterThan(0); \r",
							"    pm.expect(responseJson[0]).to.have.property('id'); \r",
							"    pm.expect(responseJson[0]).to.have.property('monto'); \r",
							"    pm.expect(responseJson[0]).to.have.property('calificacion');\r",
							"    pm.expect(responseJson[0]).to.have.property('palabraClave'); \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/bonos/usuario/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"bonos",
						"usuario",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "EliminarBonoMayor4Error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', function () {\r",
							"    pm.response.to.have.status(400); \r",
							"});\r",
							"\r",
							"pm.test('Response contains correct error message', function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.message).to.eql('No se puede eliminar un bono con calificación mayor a 4.'); \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/bonos/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"bonos",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "EliminarBonoValido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 204', function () {\r",
							"    pm.response.to.have.status(204); \r",
							"});\r",
							"\r",
							"pm.test('Response body is empty', function () {\r",
							"    pm.response.to.have.body(''); \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/bonos/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"bonos",
						"1"
					]
				}
			},
			"response": []
		}
	]
}